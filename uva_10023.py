# -*- coding: utf-8 -*-
"""
Authors: Hung-Hsin Chen <chenhh@par.cse.nsysu.edu.tw>
License: GPL v2
status: AC
difficulty: 2

https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=964
big number

X=sqrt(Y)
if Y has 2n or 2n+1 digits, then X must be n digits.

test case:
13

1

4

100

83453083097144118755679004900956161317944806332931103361102930819687294518331763956307013409



569340939211471389962659798742921403066676585830944139425416207103163630830729373807431127122499903016459194716196

26166947992642688759492234280292902602127494647996757818609669613204673679492287453459327421444887670044831093217483229313832000936492611356740151982523013435347973452124282050049913706417006806786288368888778968252893755878836900





42487106112077794597046211421535946299949658978778588304974817330598914490882698590451392521168582394571638346565167628771885532056430275583679778375426330493435327762313980992189643302516001060028871785809858256851809141525565202048055583840877357205306524567768365787934241255150863900319470215094072348659379416576252675124688639265037510069396115756053019647430582189645292968779607865717004645527978647817317601434652053188868194919795682634549609

53028982368885710873335480017426239951005719987893700431745132514196292266523501459856266539218669784950626233084819597760244784381439885402233791998923399289250675785004052306251076948941240110897317474020695505389124151396843971049150488142141767288810993067085772471981614836911315263146847858930616139753219996143830889464319517943174308685133398919360375523007274618713972813570712789205947314321967235895471559321

68032569385904403690019572920817850626383456409781027072213423107088732957383209878524721594928447004554261927159602317791516846226752303433514715906346339800621483971598100359460937528449

835212136036732205231105264269439734037118081663023871557631993274342513287811435894548900

ans:
1

2

10

9135265901830341290466917643928025123620366097

6813091568361958223587154380144851707950515054213694827691145402419982225539034214745763259211709963594120008026730089527502012006800872999459754083425426084079530339033221810350454799124603942821155465586565661331529293210772982992957285069942503944022990012268349580506520760488042442617421269098767912352673357751136096092

754546843616399597461910880324043468889050588209687659514

5115363915953848220355052476537087377144940358515362709067572943810085037164607094350039417426161892724521647494630

6399179300809496067536144442731602146547027265848718312034605174715935736599592128292723264090608818182985457793500468648086233222706162724941679419640290470089917822014073499480397263549965477121715015581257433675530957698942371235797531427965045221786898

83203243865309364406014918518317473130446708465890844211360851041072066452208962301556563794545130605254295091957973490454063962186483518098680884374995909691276966170925490734928691122229854808263487229063340592267617369429375700154206829192737145710320947059567871411568646793807243517729774258834559963533251192576649423611921859339712914207909323006925767162317933162890085688671333315121524430224360043880388666070175027948372237880633353215307138264220

6518213414124900727976579506152916120936658783476178581842433705127320859860759483132481676185988927947554973515900001640747434346648179106319133026804239030444806249276110755087845586703599019544353362193987789805250020668397

230280225744386725606212784355858424630109696834102460298541000590544489721575766892727940985939623747958679228406649219577892396017828926931087588353843840188462155599794252150524983873904124282406412913336389

8248185823919366796870862496669848661518523117188544378126399320087783080083411914062814940607

913899412428267296580606831022328244247678170
"""
import math

def square_root(Y):
    EPS = 1e-3
    a, b = 1, Y
    while (abs(a-b)>EPS):
        a = (a+b)//2
        b = Y//a
    return a

def main():
    N = int(input())

    for idx in range(N):
        _ = input()
        Y = int(input())
        if idx >= 1:
            print ("")

        print (square_root(Y))

if __name__ == '__main__':
    main()